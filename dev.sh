#!/bin/bash

# Script de desenvolvimento para o monorepo Rust
# Este script facilita o desenvolvimento e execu√ß√£o das APIs

set -e

echo "üöÄ Script de desenvolvimento para o monorepo Rust"
echo ""

# Fun√ß√£o para mostrar ajuda
show_help() {
    echo "Uso: $0 [COMANDO]"
    echo ""
    echo "Comandos dispon√≠veis:"
    echo "  build       - Compila todas as APIs"
    echo "  run         - Executa a API principal"
    echo "  run-auth    - Executa apenas a Auth API"
    echo "  run-admin   - Executa apenas a Admin API"
    echo "  run-viewer  - Executa apenas a Viewer API"
    echo "  test        - Executa todos os testes"
    echo "  check       - Verifica depend√™ncias"
    echo "  clean       - Limpa builds"
    echo "  docker      - Inicia servi√ßos Docker (SQL Server, Redis, Azurite)"
    echo "  migrate     - Executa migra√ß√µes"
    echo "  help        - Mostra esta ajuda"
    echo ""
}

# Fun√ß√£o para executar migra√ß√µes
run_migrations() {
    echo "üóÑÔ∏è  Executando migra√ß√µes..."
    if [ -f "./run_migrations_on_docker.sh" ]; then
        chmod +x ./run_migrations_on_docker.sh
        ./run_migrations_on_docker.sh
    else
        echo "‚ùå Script de migra√ß√µes n√£o encontrado"
        exit 1
    fi
}

# Fun√ß√£o para iniciar Docker
start_docker() {
    echo "üê≥ Iniciando servi√ßos Docker..."
    if [ -f "./docker-compose.yml" ]; then
        echo "üì¶ Servi√ßos dispon√≠veis:"
        echo "   - SQL Server (Porta: 1433)"
        echo "   - Redis (Porta: 27002)"
        echo "   - Azurite (Portas: 10000, 10001, 10002)"
        echo ""
        
        docker-compose up -d
        echo "‚úÖ Servi√ßos Docker iniciados"
        echo "‚è≥ Aguardando servi√ßos ficarem saud√°veis..."
        sleep 15
        docker-compose ps
        
        echo ""
        echo "üåê URLs dos servi√ßos:"
        echo "   - SQL Server: localhost:1433"
        echo "   - Redis: localhost:27002"
        echo "   - Azurite Blob: localhost:10000"
        echo "   - Azurite Queue: localhost:10001"
        echo "   - Azurite Table: localhost:10002"
    else
        echo "‚ùå docker-compose.yml n√£o encontrado"
        exit 1
    fi
}

# Fun√ß√£o para executar API espec√≠fica
run_api() {
    local api_name=$1
    local port=$2
    
    echo "üöÄ Executando $api_name na porta $port..."
    cd "src/apps/$api_name"
    cargo run --bin $api_name &
    cd ../../..
    echo "‚úÖ $api_name iniciada em http://localhost:$port"
}

# Processar comandos
case "${1:-help}" in
    "build")
        echo "üî® Compilando todas as APIs..."
        cargo build --workspace
        echo "‚úÖ Compila√ß√£o conclu√≠da!"
        ;;
    
    "run")
        echo "üöÄ Executando API principal..."
        cargo run
        ;;
    
    "run-auth")
        run_api "auth_api" "3001"
        ;;
    
    "run-admin")
        run_api "admin_api" "3002"
        ;;
    
    "run-viewer")
        run_api "viewer_api" "3003"
        ;;
    
    "test")
        echo "üß™ Executando todos os testes..."
        cargo test --workspace
        ;;
    
    "check")
        echo "üì¶ Verificando depend√™ncias..."
        cargo check --workspace
        ;;
    
    "clean")
        echo "üßπ Limpando builds..."
        cargo clean
        ;;
    
    "docker")
        start_docker
        ;;
    
    "migrate")
        run_migrations
        ;;
    
    "help"|*)
        show_help
        ;;
esac
